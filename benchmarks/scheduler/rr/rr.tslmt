//#LIA#
always assume {
	//!(eq ptr c0() && eq ptr c1());
	//(eq ptr c1() && [ptr <- sub ptr c1()]) -> X eq ptr c0();
	//(eq ptr c0() && [ptr <- add ptr c1()]) -> X eq ptr c1();
}

always guarantee {
	[ptr <- add ptr c1()] || [ptr <- sub ptr c1()];

	G F [next <- job0];
	G F [next <- job1];

	eq ptr c0() -> [next <- job0];
	eq ptr c1() -> [next <- job1];
}
