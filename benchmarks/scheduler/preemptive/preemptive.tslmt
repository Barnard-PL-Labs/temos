//#LIA#
preempt = run job1 || run job2;

always assume {
	!(run job1 && run job2);
}

always guarantee {
	[next <- job1] || [next <- job2];

	run job1 -> [next <- job1];
	run job2 -> [next <- job2];

	[next <- job1] <-> [runtime1 <- add runtime1 c1()];
	[next <- job2] <-> [runtime2 <- add runtime2 c1()];

	!preempt -> ((gt runtime1 runtime2 -> [next <- job1]) &&
				 (gt runtime2 runtime1 -> [next <- job2]));
	
	G !preempt -> ((G F [next <- job1]) && (G F [next <- job2]));
}
