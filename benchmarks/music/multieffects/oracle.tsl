always assume{
!(!(lte fmFreq c500()) && !(gt fmFreq c500()));
!(!(lte amFreq c500()) && !(gt amFreq c500()));
!((lte lfoFreq c10()) && (gt lfoFreq c10()));
(lte amFreq c500()) && ([amFreq <- ( add amFreq c100() )] W (gt amFreq c500())) -> F (gt amFreq c500());
(gt amFreq c500()) && ([amFreq <- ( sub amFreq c100() )] W (lte amFreq c500())) -> F (lte amFreq c500());
(lte fmFreq c500()) && ([fmFreq <- ( add fmFreq c100() )] W (gt fmFreq c500())) -> F (gt fmFreq c500());
(gt fmFreq c500()) && ([fmFreq <- ( sub fmFreq c100() )] W (lte fmFreq c500())) -> F (lte fmFreq c500());

}
//#RA#
always guarantee {
	lte amFreq c500() -> [amSynthesis <- False()]  U gt  amFreq c500();
	gt  amFreq c500() -> [amSynthesis <- True()] U lte amFreq c500();
	[amSynthesis <- False()]  -> [amFreq <- add amFreq c100()];
	[amSynthesis <- True()]   -> [amFreq <- sub amFreq c100()];
	G F [amSynthesis <- True()];
	G F [amSynthesis <- False()];

	lte fmFreq c500()  -> [fmSynthesis <- False()] U gt  fmFreq c500();
	gt  amFreq c500() -> [fmSynthesis <- True()]  U lte fmFreq c500();
	[fmSynthesis <- False()] -> [fmFreq <- add fmFreq c100()];
	[fmSynthesis <- True()]  -> [fmFreq <- sub fmFreq c100()];
	G F [fmSynthesis <- True()];
	G F [fmSynthesis <- False()];

	lte lfoFreq c10() -> [lfo <- False()];
	gt  lfoFreq c10() -> [lfo <- True()];
}
