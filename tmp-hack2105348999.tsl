always assume{
!((lte lfoFreq c10()) && (gt lfoFreq c10()));
!((gt lfoFreq c10()) && !(gt lfoFreq c10()));
!(!(lte lfoFreq c10()) && !(gt lfoFreq c10()));
!((lte lfoFreq c10()) && !(lte lfoFreq c10()));
(lte lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W (lte lfoFreq c10())) -> F (lte lfoFreq c10());
(lte lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W (gt lfoFreq c10())) -> F (gt lfoFreq c10());
(lte lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W !(lte lfoFreq c10())) -> F !(lte lfoFreq c10());
(lte lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W !(gt lfoFreq c10())) -> F !(gt lfoFreq c10());
(gt lfoFreq c10()) && ([lfoFreq <- ( sub lfoFreq c1() )] W (lte lfoFreq c10())) -> F (lte lfoFreq c10());
(gt lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W (gt lfoFreq c10())) -> F (gt lfoFreq c10());
(gt lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W !(lte lfoFreq c10())) -> F !(lte lfoFreq c10());
(gt lfoFreq c10()) && ([lfoFreq <- ( sub lfoFreq c1() )] W !(gt lfoFreq c10())) -> F !(gt lfoFreq c10());
!(lte lfoFreq c10()) && ([lfoFreq <- ( sub lfoFreq c1() )] W (lte lfoFreq c10())) -> F (lte lfoFreq c10());
!(lte lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W (gt lfoFreq c10())) -> F (gt lfoFreq c10());
!(lte lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W !(lte lfoFreq c10())) -> F !(lte lfoFreq c10());
!(lte lfoFreq c10()) && ([lfoFreq <- ( sub lfoFreq c1() )] W !(gt lfoFreq c10())) -> F !(gt lfoFreq c10());
!(gt lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W (lte lfoFreq c10())) -> F (lte lfoFreq c10());
!(gt lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W (gt lfoFreq c10())) -> F (gt lfoFreq c10());
!(gt lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W !(lte lfoFreq c10())) -> F !(lte lfoFreq c10());
!(gt lfoFreq c10()) && ([lfoFreq <- ( add lfoFreq c1() )] W !(gt lfoFreq c10())) -> F !(gt lfoFreq c10());

}
//#RA#
always guarantee {
	G F [lfo <- True()];
	G F [lfo <- False()];

	lte lfoFreq c10() -> [lfo <- False()]  U gt  lfoFreq c10();
	gt  lfoFreq c10() -> [lfo <- True()] U lte lfoFreq c10();
	[lfo <- False()]   -> [lfoFreq <- add lfoFreq c1()];
	[lfo <- True()]  -> [lfoFreq <- sub lfoFreq c1()];
}
