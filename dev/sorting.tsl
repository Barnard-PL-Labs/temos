//#LIA#
always assume {
	(
		((!leq a b ) && (!leq b c )) &&
		([a <- c] && [c <- a] && [b <- b])
	) -> X ((leq a b && leq b c));

	(
		(!leq a b ) && 
		([a <- b] && [b <- a])
	) -> X (leq a b);

	(
		(!leq b c ) &&
		([b <- c] && [c <- b])
	) -> X (leq b c);

	(
		( leq a b ) &&
		([b <- c] && [c <- b]) &&
		X ([a <- b] && [b <- a])
	) -> X X (leq b c);

	(
		( leq b c ) &&
		([a <- b] && [b <- a]) &&
		X ([c <- b] && [b <- c])
	) -> X X (leq a b);

}

always guarantee {
	([a <- b] && [b <- a] && [c <- c]) ||
	([a <- a] && [b <- c] && [c <- b]) ||
	([a <- c] && [b <- b] && [c <- a]);
	F (leq a b && leq b c);
}
