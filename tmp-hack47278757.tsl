always assume{
!((eq loc c100()) && !(eq loc c100()));
!((eq loc c0()) && !(eq loc c0()));
!(((lte loc c100()) && (lte c0() loc)) && !((lte loc c100()) && (lte c0() loc)));
!((eq loc c0()) && !((lte loc c100()) && (lte c0() loc)));
!((eq loc c100()) && !((lte loc c100()) && (lte c0() loc)));
!((eq loc c0()) && (eq loc c100()));
(eq loc c0()) && ([loc <- ( sub ( add loc c1() ) c1() )]) -> X  (eq loc c0());
(eq loc c0()) && ([loc <- ( add loc c1() )]) -> X  ((lte loc c100()) && (lte c0() loc));
(eq loc c0()) && ([loc <- ( add loc c1() )]) -> X  !(eq loc c0());
(eq loc c0()) && ([loc <- ( add loc c1() )]) -> X  !(eq loc c100());
(eq loc c0()) && ([loc <- ( sub loc c1() )]) -> X  !((lte loc c100()) && (lte c0() loc));
(eq loc c100()) && ([loc <- ( sub ( add loc c1() ) c1() )]) -> X  (eq loc c100());
(eq loc c100()) && ([loc <- ( sub loc c1() )]) -> X  ((lte loc c100()) && (lte c0() loc));
(eq loc c100()) && ([loc <- ( add loc c1() )]) -> X  !(eq loc c0());
(eq loc c100()) && ([loc <- ( add loc c1() )]) -> X  !(eq loc c100());
(eq loc c100()) && ([loc <- ( add loc c1() )]) -> X  !((lte loc c100()) && (lte c0() loc));
((lte loc c100()) && (lte c0() loc)) && ([loc <- ( sub ( add loc c1() ) c1() )]) -> X  ((lte loc c100()) && (lte c0() loc));
((lte loc c100()) && (lte c0() loc)) && ([loc <- ( add loc c1() )]) -> X  !(eq loc c0());
((lte loc c100()) && (lte c0() loc)) && ([loc <- ( sub loc c1() )]) -> X  !(eq loc c100());
!(eq loc c0()) && ([loc <- ( sub ( add loc c1() ) c1() )]) -> X  !(eq loc c0());
!(eq loc c100()) && ([loc <- ( sub ( add loc c1() ) c1() )]) -> X  !(eq loc c100());
!((lte loc c100()) && (lte c0() loc)) && ([loc <- ( sub loc c1() )]) -> X  !(eq loc c0());
!((lte loc c100()) && (lte c0() loc)) && ([loc <- ( add loc c1() )]) -> X  !(eq loc c100());
!((lte loc c100()) && (lte c0() loc)) && ([loc <- ( sub ( add loc c1() ) c1() )]) -> X  !((lte loc c100()) && (lte c0() loc));

}
//#LIA#
initially assume {
	eq loc c0();
}

always guarantee {
	[loc <- sub loc c1()] -> [loc <- sub loc c1()] W (eq loc c0());
	[loc <- add loc c1()] -> [loc <- add loc c1()] W (eq loc c100());
	eq loc c100() -> [loc <- sub loc c1()];
	eq loc c0()   -> [loc <- add loc c1()];
	(lte c0() loc && lte loc c100());
}
